generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "rhel-openssl-1.0.x"]
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model accounts {
  id              Int         @id @default(autoincrement())
  external_code   String
  user_id         Int
  name            String
  acronym         String
  type            String
  create_at       DateTime    @default(now())
  created_by      Int?
  update_at       DateTime?   @updatedAt
  last_changed_by Int?
  movements       movements[]
  users           users?      @relation(fields: [user_id], references: [id])

  @@index([user_id])
}

model users {
  id              Int        @id @default(autoincrement())
  external_code   String
  name            String
  email           String
  create_at       DateTime   @default(now())
  created_by      Int?
  update_at       DateTime?  @updatedAt
  last_changed_by Int?
  accounts        accounts[]
}

model categories {
  id              Int       @id @default(autoincrement())
  external_code   String
  name            String
  code            String
  parent_code     String?
  create_at       DateTime  @default(now())
  created_by      Int?
  update_at       DateTime? @updatedAt
  last_changed_by Int?
}

model movements {
  id              Int        @id @default(autoincrement())
  external_code   String
  account_id      Int
  purchase_id     Int
  description     String
  value           Int
  date_time       DateTime
  create_at       DateTime   @default(now())
  created_by      Int?
  update_at       DateTime?  @updatedAt
  last_changed_by Int?
  account         accounts?  @relation(fields: [account_id], references: [id])
  purchase        purchases? @relation(fields: [purchase_id], references: [id])

  @@index([account_id])
  @@index([purchase_id])
}

model products {
  id              Int              @id @default(autoincrement())
  external_code   String
  description     String
  default_unit    String
  category_id     Int?
  create_at       DateTime         @default(now())
  created_by      Int?
  update_at       DateTime?        @updatedAt
  last_changed_by Int?
  purchase_items  purchase_items[]
}

model purchases {
  id                   Int              @id @default(autoincrement())
  external_code        String
  supplier_id          Int?
  number_installments  Int
  full_amount_discount Int?
  discount_value       Int?
  amount_charged       Int
  date_time            DateTime
  create_at            DateTime         @default(now())
  created_by           Int?
  update_at            DateTime?
  last_changed_by      Int?
  movements            movements[]
  purchase_items       purchase_items[]
  supplier             suppliers?       @relation(fields: [supplier_id], references: [id])

  @@index([supplier_id])
}

model purchase_items {
  id              Int        @id @default(autoincrement())
  external_code   String
  purchase_id     Int
  product_id      Int?
  description     String
  supplier_code   String?
  value           Int
  unit            String
  unitary_value   Int
  total_amount    Int
  discount        Int?
  create_at       DateTime   @default(now())
  created_by      Int?
  update_at       DateTime?  @updatedAt
  last_changed_by Int?
  purchase        purchases? @relation(fields: [purchase_id], references: [id])
  product         products?  @relation(fields: [product_id], references: [id])

  @@index([purchase_id])
  @@index([product_id])
}

model suppliers {
  id              Int         @id @default(autoincrement())
  external_code   String
  business_name   String
  commercial_name String?
  cpf_cnpj        String?
  address         String?
  uf              String?
  create_at       DateTime    @default(now())
  created_by      Int?
  update_at       DateTime?   @updatedAt
  last_changed_by Int?
  purchases       purchases[]
}
